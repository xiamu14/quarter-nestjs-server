// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  avatar    String?   @default("")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  projects  Project[]
  tasks     Task[]
}

model Task {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String    @db.VarChar(255)
  status      Status    @default(Pending)
  userId      String?
  user        User?     @relation(fields: [userId], references: [id])
  duration    Int       @default(15)
  priority    Int?      @default(0)
  date        DateTime?
  start       String?
  projectId   String?
  description String?   @default("")
  project     Project?  @relation(fields: [projectId], references: [id])
  targetId    String?
  target      Target?   @relation(fields: [targetId], references: [id])
}

enum Status {
  Pending
  Finish
}

model Project {
  id        String        @id @default(cuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  name      String
  color     String        @default("")
  status    ProjectStatus @default(Doing)
  userId    String?
  user      User?         @relation(fields: [userId], references: [id])
  targets   Target[]
  tasks     Task[]
}

enum ProjectStatus {
  Archive
  Doing
}

model Target {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String
  status      TargetStatus @default(Doing)
  project     Project?     @relation(fields: [projectId], references: [id])
  projectId   String?
  date        DateTime?
  description String?      @default("")
  tasks       Task[]
}

enum TargetStatus {
  Doing
  Abandon
  Success
}
